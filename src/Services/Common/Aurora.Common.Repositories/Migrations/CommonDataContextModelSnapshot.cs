// <auto-generated />
using System;
using Aurora.Common.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aurora.Common.Repositories.Migrations
{
    [DbContext(typeof(CommonDataContext))]
    partial class CommonDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("COM")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aurora.Common.Domain.Catalogs.Models.CatalogData", b =>
                {
                    b.Property<int>("CatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CatalogId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit")
                        .HasColumnName("IsEditable");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit")
                        .HasColumnName("IsVisible");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("CatalogId")
                        .HasName("PK_Catalog");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("UK_Catalog");

                    b.ToTable("Catalog", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Catalogs.Models.CatalogItemData", b =>
                {
                    b.Property<int>("CatalogItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CatalogItemId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogId")
                        .HasColumnType("int")
                        .HasColumnName("CatalogId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Code");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit")
                        .HasColumnName("IsEditable");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedDate");

                    b.HasKey("CatalogItemId")
                        .HasName("PK_CatalogItem");

                    b.HasIndex("CatalogId", "Code")
                        .IsUnique()
                        .HasDatabaseName("UK_CatalogItem");

                    b.ToTable("CatalogItem", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.CountryData", b =>
                {
                    b.Property<short>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("CountryId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InternetPrefix")
                        .HasColumnType("char(3)")
                        .HasColumnName("InternetPrefix");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("OfficialName");

                    b.Property<string>("ThreeDigitsCode")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .HasColumnName("ThreeDigitsCode");

                    b.Property<string>("ThreeLettersCode")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .HasColumnName("ThreeLettersCode");

                    b.Property<string>("TwoLettersCode")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .HasColumnName("TwoLettersCode");

                    b.HasKey("CountryId")
                        .HasName("PK_Country");

                    b.HasIndex("ThreeLettersCode")
                        .IsUnique()
                        .HasDatabaseName("UK_Country");

                    b.ToTable("Country", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.CountryDivisionData", b =>
                {
                    b.Property<short>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("DivisionId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CountryId")
                        .HasColumnType("smallint")
                        .HasColumnName("CountryId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsCityLevel")
                        .HasColumnType("bit")
                        .HasColumnName("IsCityLevel");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedDate");

                    b.Property<int>("LevelNumber")
                        .HasColumnType("int")
                        .HasColumnName("LevelNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("DivisionId")
                        .HasName("PK_CountryDivision");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryDivision", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.LocationData", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativeCode")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("AlternativeCode");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Code");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<short>("DivisionId")
                        .HasColumnType("smallint")
                        .HasColumnName("DivisionId");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("ParentLocationId")
                        .HasColumnType("int")
                        .HasColumnName("ParentLocationId");

                    b.HasKey("LocationId")
                        .HasName("PK_Location");

                    b.HasIndex("DivisionId");

                    b.ToTable("Location", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Settings.Models.AttributeSettingData", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttributeId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Code");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("xml")
                        .HasColumnName("Configuration");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("DataType");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit")
                        .HasColumnName("IsEditable");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit")
                        .HasColumnName("IsVisible");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("ScopeType")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ScopeType");

                    b.HasKey("AttributeId")
                        .HasName("PK_AttributeSetting");

                    b.HasIndex("Code", "ScopeType")
                        .IsUnique()
                        .HasDatabaseName("UK_AttributeSetting");

                    b.ToTable("AttributeSetting", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Settings.Models.AttributeValueData", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdatedDate");

                    b.Property<int>("RelationshipId")
                        .HasColumnType("int")
                        .HasColumnName("RelationshipId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("xml")
                        .HasColumnName("Value");

                    b.HasKey("AttributeId")
                        .HasName("PK_AttributeValue");

                    b.HasIndex("AttributeId", "RelationshipId")
                        .IsUnique()
                        .HasDatabaseName("UK_AttributeValue");

                    b.ToTable("AttributeValue", "COM");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Catalogs.Models.CatalogItemData", b =>
                {
                    b.HasOne("Aurora.Common.Domain.Catalogs.Models.CatalogData", "Catalog")
                        .WithMany("Items")
                        .HasForeignKey("CatalogId")
                        .HasConstraintName("FK_CatalogItem_Catalog")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.CountryDivisionData", b =>
                {
                    b.HasOne("Aurora.Common.Domain.Locations.Models.CountryData", "Country")
                        .WithMany("Divisions")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_CountryDivision_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.LocationData", b =>
                {
                    b.HasOne("Aurora.Common.Domain.Locations.Models.CountryDivisionData", "Division")
                        .WithMany("Locations")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_Location_CountryDivision")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Settings.Models.AttributeValueData", b =>
                {
                    b.HasOne("Aurora.Common.Domain.Settings.Models.AttributeSettingData", "AttributeSetting")
                        .WithMany("Values")
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("FK_AttributeValue_AttributeSetting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeSetting");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Catalogs.Models.CatalogData", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.CountryData", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Locations.Models.CountryDivisionData", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Aurora.Common.Domain.Settings.Models.AttributeSettingData", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
