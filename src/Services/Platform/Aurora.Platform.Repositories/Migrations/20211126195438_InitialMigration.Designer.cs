// <auto-generated />
using System;
using Aurora.Platform.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aurora.Platform.Repositories.Migrations
{
    [DbContext(typeof(PlatformDataContext))]
    [Migration("20211126195438_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("APP")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.ApplicationData", b =>
                {
                    b.Property<short>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("IdAplicacion")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("Codigo");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("ApplicationId")
                        .HasName("PK_Aplicacion");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("UK_Aplicacion");

                    b.ToTable("Aplicacion", "APP");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.ComponentData", b =>
                {
                    b.Property<int>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdComponente")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("ApplicationId")
                        .HasColumnType("smallint")
                        .HasColumnName("IdAplicacion");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Codigo");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descripcion");

                    b.HasKey("ComponentId")
                        .HasName("PK_Componente");

                    b.HasIndex("ApplicationId", "Code")
                        .IsUnique()
                        .HasDatabaseName("UK_Componente");

                    b.ToTable("Componente", "APP");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.RepositoryData", b =>
                {
                    b.Property<int>("RepositoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRepositorio")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("ApplicationId")
                        .HasColumnType("smallint")
                        .HasColumnName("IdAplicacion");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("Codigo");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descripcion");

                    b.HasKey("RepositoryId")
                        .HasName("PK_Repositorio");

                    b.HasIndex("ApplicationId", "Code")
                        .IsUnique()
                        .HasDatabaseName("UK_Repositorio");

                    b.ToTable("Repositorio", "APP");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.RepositoryDetailData", b =>
                {
                    b.Property<int>("RepositoryDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRepositorioDetalle")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComponentId")
                        .HasColumnType("int")
                        .HasColumnName("IdComponente");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioModificacion");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int")
                        .HasColumnName("IdRepositorio");

                    b.Property<string>("StringData")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Cadena");

                    b.HasKey("RepositoryDetailId")
                        .HasName("PK_RepositorioDetalle");

                    b.HasIndex("RepositoryId", "ComponentId")
                        .IsUnique()
                        .HasDatabaseName("UK_RepositorioDetalle");

                    b.ToTable("RepositorioDetalle", "APP");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.RoleData", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRol")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descripcion");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("EsActivo");

                    b.Property<bool>("IsDefaultRole")
                        .HasColumnType("bit")
                        .HasColumnName("EsPredeterminado");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioModificacion");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int")
                        .HasColumnName("IdRepositorio");

                    b.HasKey("RoleId")
                        .HasName("PK_Rol");

                    b.HasIndex("RepositoryId", "Name")
                        .IsUnique()
                        .HasDatabaseName("UK_Rol");

                    b.ToTable("Rol", "SEG");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserCredentialData", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaExpiracion");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioModificacion");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion");

                    b.Property<bool>("MustChange")
                        .HasColumnType("bit")
                        .HasColumnName("DebeCambiar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Contrasena");

                    b.Property<string>("PasswordControl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ContrasenaControl");

                    b.HasKey("UserId")
                        .HasName("PK_UsuarioCredencial");

                    b.ToTable("UsuarioCredencial", "SEG");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserCredentialLogData", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHistorial")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeNumber")
                        .HasColumnType("int")
                        .HasColumnName("NumeroCambio");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaFinalizacion");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaExpiracion");

                    b.Property<bool>("MustChange")
                        .HasColumnType("bit")
                        .HasColumnName("DebeCambiar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Contrasena");

                    b.Property<string>("PasswordControl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ContrasenaControl");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("LogId")
                        .HasName("PK_UsuarioCredencialHistorial");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioCredencialHistorial", "SEG");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserData", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CorreoElectronico");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("EsActivo");

                    b.Property<bool>("IsDefaultUser")
                        .HasColumnType("bit")
                        .HasColumnName("EsPredeterminado");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioModificacion");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("NombreUsuario");

                    b.HasKey("UserId")
                        .HasName("PK_Usuario");

                    b.HasIndex("LoginName")
                        .IsUnique()
                        .HasDatabaseName("UK_Usuario");

                    b.ToTable("Usuario", "SEG");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserMembershipData", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPertenencia")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("EsActivo");

                    b.Property<bool>("IsDefaultMembership")
                        .HasColumnType("bit")
                        .HasColumnName("EsPredeterminado");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasColumnName("UsuarioModificacion");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("IdRol");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("MembershipId")
                        .HasName("PK_UsuarioPertenencia");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique()
                        .HasDatabaseName("UK_UsuarioPertenencia");

                    b.ToTable("UsuarioPertenencia", "SEG");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.ComponentData", b =>
                {
                    b.HasOne("Aurora.Platform.Domain.Applications.Models.ApplicationData", "Application")
                        .WithMany("Components")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Componente_Aplicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.RepositoryData", b =>
                {
                    b.HasOne("Aurora.Platform.Domain.Applications.Models.ApplicationData", "Application")
                        .WithMany("Repositories")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Repositorio_Aplicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.RepositoryDetailData", b =>
                {
                    b.HasOne("Aurora.Platform.Domain.Applications.Models.RepositoryData", "Repository")
                        .WithMany("Details")
                        .HasForeignKey("RepositoryId")
                        .HasConstraintName("FK_RepositorioDetalle_Repositorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserCredentialData", b =>
                {
                    b.HasOne("Aurora.Platform.Domain.Security.Models.UserData", "User")
                        .WithOne("Credential")
                        .HasForeignKey("Aurora.Platform.Domain.Security.Models.UserCredentialData", "UserId")
                        .HasConstraintName("FK_UsuarioCredencial_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserCredentialLogData", b =>
                {
                    b.HasOne("Aurora.Platform.Domain.Security.Models.UserCredentialData", "Credential")
                        .WithMany("CredentialLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsuarioCredencialHistorial_UsuarioCredencial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credential");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserMembershipData", b =>
                {
                    b.HasOne("Aurora.Platform.Domain.Security.Models.RoleData", "Role")
                        .WithMany("Memberships")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UsuarioPertenencia_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aurora.Platform.Domain.Security.Models.UserData", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsuarioPertenencia_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.ApplicationData", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Repositories");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Applications.Models.RepositoryData", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.RoleData", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserCredentialData", b =>
                {
                    b.Navigation("CredentialLogs");
                });

            modelBuilder.Entity("Aurora.Platform.Domain.Security.Models.UserData", b =>
                {
                    b.Navigation("Credential");

                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
